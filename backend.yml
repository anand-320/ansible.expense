- name: backend setup
  hosts: all
  become: true
  tasks:
    - name: disable nodejs -y
      ansible.builtin.shell: dnf module disable nodejs -y

    - name: enable nodejs:20
      ansible.builtin.shell: dnf module enable nodejs:20 -y

    - name: install nodejs
      ansible.builtin.dnf:
        name: nodejs
        state: latest

    - name: add user expense
      ansible.builtin.user:
        name: expense

    - name: cleaning directory
      ansible.builtin.file:
        path: /app
        state: absent

    - name: Create a directory
      ansible.builtin.file:
        path: /app
        state: directory

    - name: Download content
      ansible.builtin.unarchive:
        src: https://expense-artifacts.s3.amazonaws.com/expense-backend-v2.zip
        dest: /app
        remote_src: yes

    - name: download nodejs dependency
      community.general.npm:
        path: /app
        state: latest

    - name: copy backend service file
      ansible.builtin.copy:
        src: backend.service
        dest: /etc/systemd/system/backend.service

    - name: install python mysql client
      ansible.builtin.pip:
        name:
          -bottle
          -cryptography
        state: pip3.9


    - name: load schema
      community.mysql.mysql_db:
        state: import
        name: all
        target: /app/schema/backend.sql
        login_user: root
        login_password: Anand@1
        login_host: mysql-dev.janand.online

    - name: start backend
      ansible.builtin.systemd_service:
        name: backend
        state: restarted
        enabled: yes
        demon_reload: yes
